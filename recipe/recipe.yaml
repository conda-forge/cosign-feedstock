context:
  version: "2.5.0"

package:
  name: cosign
  version: ${{ version }}

source:
  # cosign uses `GitVersion`` and thus needs to be checked out with a tag
  - git: https://github.com/sigstore/cosign
    tag: v${{ version }}

build:
  number: 0
  script:
    - go build -ldflags="-s -w" -o ${{ PREFIX }}/bin/cosign${{ ".exe" if win }} ./cmd/cosign

    # Generate shell completions (only on Unix and when target platform equals build platform)
    - if: unix and target_platform == build_platform
      then:
        - mkdir -p $PREFIX/share/bash-completion/completions
        - mkdir -p $PREFIX/share/zsh/site-functions
        - mkdir -p $PREFIX/share/fish/vendor_completions.d
        - $PREFIX/bin/cosign completion bash > $PREFIX/share/bash-completion/completions/cosign
        - $PREFIX/bin/cosign completion zsh > $PREFIX/share/zsh/site-functions/_cosign
        - $PREFIX/bin/cosign completion fish > $PREFIX/share/fish/vendor_completions.d/cosign.fish

    # Collect license information
    - go-licenses save --save_path ${{ "$SRC_DIR" if unix else "%SRC_DIR%" }}/license-files ./cmd/cosign || true

requirements:
  build:
    - ${{ compiler('go-nocgo') }}
    - go-licenses

tests:
  - script: cosign version
  - script: |
      echo -e "testpassword\ntestpassword" | cosign generate-key-pair
      test -f cosign.pub


about:
  homepage: https://github.com/sigstore/cosign
  license: Apache-2.0
  license_file:
    - LICENSE
    - license-files/
  summary: Container Signing
  description: |
    Cosign aims to make signatures invisible infrastructure. 
    Cosign supports:
    - Container Signing
    - Artifacts in OCI registries
    - Blobs
    - Multiple architectures
    - Other artifacts (SBOM, SLSA, etc.)
  repository: https://github.com/sigstore/cosign
  documentation: https://github.com/sigstore/cosign

extra:
  recipe-maintainers:
    - wolfv
